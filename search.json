[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Josep Espasa Reig. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Espasa Reig J (2023). nationalaccountslis: National Accounts LIS data. R package version 0.0.1.","code":"@Manual{,   title = {nationalaccountslis: National Accounts with LIS data},   author = {Josep {Espasa Reig}},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"National Accounts with LIS data","text":"nationalaccountslis R package compute national accounts coverage ratios LIS Data Center methodology. allows users : * Reproduce coverage ratios published LIS Compare.dashboard. * Download, clean prepare national accounts data OECD. * Compute estimates microdata. * Compute plot coverage ratios.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"National Accounts with LIS data","text":"can install package GitHub repo :","code":"devtools::install_github(\"https://github.com/JosepER/nationalaccountslis)"},{"path":"/index.html","id":"version","dir":"","previous_headings":"","what":"Version","title":"National Accounts with LIS data","text":"package currently Alpha version.","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"National Accounts with LIS data","text":"","code":"library(nationalaccountslis)  # download the national accounts using the OECD API na_data <- download_na_oecd(start_year = 1985, countries = c(\"ITA\", \"USA\"),                  items = lis_dashboard_items)  # clean the downloaded national accounts data and create a wide table na_table <- produce_oecd_na_table(na_data, nationalaccountslis::lis_dashboard_na_formulas)  # compute the estimates from microdata microdata_estimates <- nationalaccountslis::compute_estimates_lis_microdata(datasets = c(\"it14i\", \"us16i\"),                                 data_path = \"data-raw/\", # <- Replace with the path to local files.                                 weights= \"hpopwgt\",                                 formulas= nationalaccountslis::lis_dashboard_microdata_formulas)  # Compute the coverage ratios  compute_national_accounts_ratios(microdata_estimates, na_table)  #  A tibble: 12 × 5 #    ccyyd variable            value_mi  value_na   ratio #    <chr> <chr>                  <dbl>     <dbl>   <dbl> #  1 it14i D11R                  47860.   469553. 0.102 #  2 it14i B3GR+D41R+D42R+D45R   25369.   389314. 0.0652 #  3 it14i D62R                  30229.   354996. 0.0852 #  4 it14i D5P+D61P-D12R         27571.   271452. 0.102 #  5 it14i D61P-D12R                 0     72524  0 #  6 it14i B6GR-K1R              75886.  1011206. 0.0750 #  7 us16i D11R                 109355.  8091239. 0.0135 #  8 us16i B3GR+D41R+D42R+D45R   15290.  4482413. 0.00341 #  9 us16i D62R                  18847.  4011206. 0.00470 # 10 us16i D5P+D61P-D12R         34287.  2616116. 0.0131 # 11 us16i D61P-D12R              8485.   657891. 0.0129 # 12 us16i B6GR-K1R             109204. 13431200. 0.00813"},{"path":"/reference/apply_na_processing_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply NA Processing Formulas — apply_na_processing_formulas","title":"Apply NA Processing Formulas — apply_na_processing_formulas","text":"function takes data.frame list strings containing formulas input applies formulas process data.frame.","code":""},{"path":"/reference/apply_na_processing_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply NA Processing Formulas — apply_na_processing_formulas","text":"","code":"apply_na_processing_formulas(df, list_formulas)"},{"path":"/reference/apply_na_processing_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply NA Processing Formulas — apply_na_processing_formulas","text":"df data frame containing data formulas applied. list_formulas named list formulas, formula represented string. E.g. list( X = \"!.na() ~ , !.na(b) ~ b, TRUE ~ c\", Y = \"!.na(m) ~ m, !.na(l) ~ l, TRUE ~ NA\" )","code":""},{"path":"/reference/apply_na_processing_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply NA Processing Formulas — apply_na_processing_formulas","text":"data frame copy input data frame, additional columns formula input list. name new column name corresponding formula input list.","code":""},{"path":"/reference/apply_na_processing_formulas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply NA Processing Formulas — apply_na_processing_formulas","text":"","code":"if (FALSE) { df <- data.frame(a = c(1, NA, 3), b = c(NA, 5, 6), c = c(7, 8, 9)) list_formulas <- list(  X = \"!is.na(a) ~ a, !is.na(b) ~ b, TRUE ~ c\",  Y = \"!is.na(m) ~ m, !is.na(l) ~ l, TRUE ~ NA\" ) apply_na_processing_formulas(df, list_formulas) }"},{"path":"/reference/check_col_names_are_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the names in two dataframes are equal — check_col_names_are_equal","title":"Check that the names in two dataframes are equal — check_col_names_are_equal","text":"Check names two dataframes (estimates microdata NA table) equal, excluding ccyy ccyyd columns.","code":""},{"path":"/reference/check_col_names_are_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the names in two dataframes are equal — check_col_names_are_equal","text":"","code":"check_col_names_are_equal(df_estimates_microdata, na_table)"},{"path":"/reference/compute_estimates_lis_microdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute National Account estimates from LIS microdata — compute_estimates_lis_microdata","title":"Compute National Account estimates from LIS microdata — compute_estimates_lis_microdata","text":"Computes National Account estimates LIS microdata. grosses variables using population weights reproduce National Accounts numbers.","code":""},{"path":"/reference/compute_estimates_lis_microdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute National Account estimates from LIS microdata — compute_estimates_lis_microdata","text":"","code":"compute_estimates_lis_microdata(   datasets,   data_path,   weights,   formulas_microdata = nationalaccountslis::lis_dashboard_microdata_formulas )"},{"path":"/reference/compute_estimates_lis_microdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute National Account estimates from LIS microdata — compute_estimates_lis_microdata","text":"datasets vector strings names datasets read. fourth character must identify database dataset (e.g. '' LIS, 'w' LWS, 'e' ERFLIS). E.g. 'it14i' data_path string vector strings path folder containing LIS datasets. Must either length 1 (datasets path) length datasets. weights string vector strings names weight variable(s) use. Must either length 1 (datasets use weight variable) length formulas. formulas_microdata list formulas compute National Accounts estimates.","code":""},{"path":"/reference/compute_estimates_lis_microdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute National Account estimates from LIS microdata — compute_estimates_lis_microdata","text":"list dataframes National Accounts estimates microdata.","code":""},{"path":"/reference/compute_estimates_single_lis_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","title":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","text":"Computes National Account estimates single LIS microdata file. grosses variables using population weights reproduce National Accounts items.","code":""},{"path":"/reference/compute_estimates_single_lis_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","text":"","code":"compute_estimates_single_lis_file(   dataset,   data_path,   weights,   formulas_microdata )"},{"path":"/reference/compute_estimates_single_lis_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","text":"dataset string name dataset read. data_path string path folder containing LIS datasets. weights string vector strings names weight variable(s) use. Must either length 1 (datasets use weight variable) length formulas. formulas_microdata list strings witht formulas compute National Accounts estimates.","code":""},{"path":"/reference/compute_estimates_single_lis_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","text":"dataframe National Accounts estimates microdata.","code":""},{"path":"/reference/compute_estimates_single_lis_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute National Account estimates from a single LIS microdata file — compute_estimates_single_lis_file","text":"Lower level function called compute_estimates_lis_microdata. intended called directly.","code":""},{"path":"/reference/compute_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Formulas — compute_formulas","title":"Compute Formulas — compute_formulas","text":"function evaluates formula list formulas respect data frame, adding results new columns data frame.","code":""},{"path":"/reference/compute_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Formulas — compute_formulas","text":"","code":"compute_formulas(df, formulas)"},{"path":"/reference/compute_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Formulas — compute_formulas","text":"df data frame containing data formulas applied. formulas named list formulas, formula represented string. E.g. list(Z = \"+ b\", Y = \"c+d\")","code":""},{"path":"/reference/compute_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Formulas — compute_formulas","text":"data frame copy input data frame, additional columns formula input list. name new column name corresponding formula input list.","code":""},{"path":"/reference/compute_formulas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Formulas — compute_formulas","text":"","code":"if (FALSE) { df <- data.frame(a = 1:3, b = 4:6, c = 7:9, d = 10:12) formulas <- list(Z = \"a + b\", Y = \"c+d\") compute_formulas(df, formulas) }"},{"path":"/reference/compute_gross_up_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute grossed up estimates from LIS microdata — compute_gross_up_estimate","title":"Compute grossed up estimates from LIS microdata — compute_gross_up_estimate","text":"Compute grossed estimates LIS microdata","code":""},{"path":"/reference/compute_gross_up_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute grossed up estimates from LIS microdata — compute_gross_up_estimate","text":"","code":"compute_gross_up_estimate(df, weights, formulas_microdata)"},{"path":"/reference/compute_gross_up_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute grossed up estimates from LIS microdata — compute_gross_up_estimate","text":"df dataframe LIS microdata. weights string vector strings names weight variable(s) use. Must either length 1 (datasets use weight variable) length formulas. formulas_microdata list strings witht formulas compute National Accounts estimates.","code":""},{"path":"/reference/compute_national_accounts_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute National Accounts ratios — compute_national_accounts_ratios","title":"Compute National Accounts ratios — compute_national_accounts_ratios","text":"Compute National Accounts ratios items microdata National Accounts.","code":""},{"path":"/reference/compute_national_accounts_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute National Accounts ratios — compute_national_accounts_ratios","text":"","code":"compute_national_accounts_ratios(   df_estimates_microdata,   na_table,   formulas_ratios =     as.list(set_names(names(nationalaccountslis::lis_dashboard_microdata_formulas))) )"},{"path":"/reference/compute_national_accounts_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute National Accounts ratios — compute_national_accounts_ratios","text":"df_estimates_microdata dataframe National Accounts estimates microdata. Must contain ccyyd column one column per variable, column names matching formulas formulas_microdata. E.g. returned compute_estimates_lis_microdata(). na_table dataframe National Accounts data. E.g. returned produce_oecd_na_table(). Must contain following columns: country, year one column per variable. E.g. data.frame(country = c(\"ITA\", \"USA\"), year = c(1985, 1985), D11R = c(100, 200), D12R = c(300, 400))","code":""},{"path":"/reference/compute_national_accounts_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute National Accounts ratios — compute_national_accounts_ratios","text":"dataframe National Accounts ratios.","code":""},{"path":"/reference/convert_iso2_to_iso3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","title":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","text":"Convert ISO2 country codes ISOW3","code":""},{"path":"/reference/convert_iso2_to_iso3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","text":"","code":"convert_iso2_to_iso3(countries)"},{"path":"/reference/convert_iso2_to_iso3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","text":"countries vector ISO2 country codes.","code":""},{"path":"/reference/convert_iso2_to_iso3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","text":"vector ISO3 country codes.","code":""},{"path":"/reference/convert_iso2_to_iso3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ISO2 country codes to ISOW3 — convert_iso2_to_iso3","text":"","code":"if (FALSE) { convert_iso2_to_iso3(c(\"US\", \"DE\", \"JP\")) }"},{"path":"/reference/convert_iso3_to_iso2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","title":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","text":"Convert ISO3 country codes ISO2","code":""},{"path":"/reference/convert_iso3_to_iso2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","text":"","code":"convert_iso3_to_iso2(countries)"},{"path":"/reference/convert_iso3_to_iso2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","text":"countries vector ISO3 country codes.","code":""},{"path":"/reference/convert_iso3_to_iso2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","text":"vector ISO2 country codes.","code":""},{"path":"/reference/convert_iso3_to_iso2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ISO3 country codes to ISO2 — convert_iso3_to_iso2","text":"","code":"if (FALSE) { convert_iso3_to_iso2(c(\"USA\", \"DEU\", \"JPN\")) }"},{"path":"/reference/download_na_oecd.html","id":null,"dir":"Reference","previous_headings":"","what":"Download National Accounts from OECD REST API — download_na_oecd","title":"Download National Accounts from OECD REST API — download_na_oecd","text":"Download National Accounts OECD REST API.","code":""},{"path":"/reference/download_na_oecd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download National Accounts from OECD REST API — download_na_oecd","text":"","code":"download_na_oecd(   start_year = 1967,   countries = nationalaccountstools::lis_dashboard_countries,   items = nationalaccountslis::lis_dashboard_items )"},{"path":"/reference/download_na_oecd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download National Accounts from OECD REST API — download_na_oecd","text":"start_year first year download data . countries vector ISO2 ISO3 country codes. E.g. c(\"AUS\", \"AUT\", \"BEL\"). Defaults countries used LIS Compare.items vector National Account items download. E.g. c(\"NFD11R\", \"NFD12R\", \"NFB3GR\"). Defaults items used LIS Compare.Dashboard.","code":""},{"path":"/reference/download_na_oecd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download National Accounts from OECD REST API — download_na_oecd","text":"data frame following columns: country, variable, sector, year, value.","code":""},{"path":"/reference/download_na_oecd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download National Accounts from OECD REST API — download_na_oecd","text":"","code":"if (FALSE) { download_na_oecd(start_year = 1967, countries = c(\"AUS\", \"AUT\", \"BEL\"),  items = c(\"NFD11R\", \"NFD12R\", \"NFB3GR\")) }"},{"path":"/reference/parse_all_vars_from_formulas.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse All Variables from Formulas — parse_all_vars_from_formulas","title":"Parse All Variables from Formulas — parse_all_vars_from_formulas","text":"function takes list formulas input returns variables used formulas.","code":""},{"path":"/reference/parse_all_vars_from_formulas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse All Variables from Formulas — parse_all_vars_from_formulas","text":"","code":"parse_all_vars_from_formulas(formulas)"},{"path":"/reference/parse_all_vars_from_formulas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse All Variables from Formulas — parse_all_vars_from_formulas","text":"formulas list formulas, formula represented string.","code":""},{"path":"/reference/parse_all_vars_from_formulas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse All Variables from Formulas — parse_all_vars_from_formulas","text":"character vector variables used formulas.","code":""},{"path":"/reference/produce_oecd_na_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","title":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","text":"Produce National Accounts table OECD detailed non-financial data. Cleans National Accounts data following steps: remove prefix NF variable use instructions formulas_na process data (.e. compute items using available sectors) reshape data wide format (.e. country, year one column per variable)","code":""},{"path":"/reference/produce_oecd_na_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","text":"","code":"produce_oecd_na_table(   na_data,   formulas_na = nationalaccountslis::lis_dashboard_na_formulas )"},{"path":"/reference/produce_oecd_na_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","text":"na_data dataframe National Accounts data. E.g. returned download_na_oecd(). Must contain following columns: country, variable, sector, year, value. formulas_na list strings containing formulas produce National Accounts table.","code":""},{"path":"/reference/produce_oecd_na_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","text":"dataframe National Accounts table. contains following columns: country, year one column per variable.","code":""},{"path":"/reference/produce_oecd_na_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce the National Accounts table for the OECD data — produce_oecd_na_table","text":"","code":"if (FALSE) { # download the National Accounts data na_data <- download_na_oecd()  # produce the National Accounts table na_table <- produce_oecd_na_table(na_data) }"},{"path":"/reference/read_lis_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a LIS dataset — read_lis_dataset","title":"Read a LIS dataset — read_lis_dataset","text":"Reads LIS dataset returns dataframe variables needed National Accounts estimates.","code":""},{"path":"/reference/read_lis_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a LIS dataset — read_lis_dataset","text":"","code":"read_lis_dataset(dataset, data_path, needed_vars)  read_lws_dataset(dataset, data_path, needed_vars)"},{"path":"/reference/read_lis_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a LIS dataset — read_lis_dataset","text":"dataset string name dataset read. E.g. 'it14i' data_path string path folder containing LIS datasets. needed_vars vector strings names variables needed National Accounts estimates.","code":""},{"path":"/reference/read_lis_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a LIS dataset — read_lis_dataset","text":"dataframe variables needed National Accounts estimates.","code":""},{"path":"/reference/read_lis_dataset.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Read a LIS dataset — read_lis_dataset","text":"read_lws_dataset(): Read LWS dataset","code":""},{"path":"/reference/read_lis_microdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a LIS or LWS dataset — read_lis_microdata","title":"Read a LIS or LWS dataset — read_lis_microdata","text":"Reads LIS LWS dataset returns dataframe variables needed National Accounts estimates.","code":""},{"path":"/reference/read_lis_microdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a LIS or LWS dataset — read_lis_microdata","text":"","code":"read_lis_microdata(dataset, data_path, weights, formulas)"},{"path":"/reference/read_lis_microdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a LIS or LWS dataset — read_lis_microdata","text":"dataset string name dataset read. E.g. 'it14i'. fifth character must identify database dataset (e.g. '' LIS, 'w' LWS, 'e' ERFLIS). data_path string path folder containing LIS datasets. formulas list formulas compute National Accounts estimates.","code":""},{"path":"/reference/read_lis_microdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a LIS or LWS dataset — read_lis_microdata","text":"dataframe variables needed National Accounts estimates.","code":""}]
